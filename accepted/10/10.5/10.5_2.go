package main

import (
	"fmt"
	"math"
)

/*
В связи с особенностями хранения дробных чисел они не очень
подходят для хранения денежных значений (может потеряться
значимая часть при переполнении, да и дробная часть больше
двух знаков не нужна). Но мы попробуем решить задачу
начисления процентов, используя именно их.

Пусть пользователь вводит сумму, которую он кладёт в банк,
ежемесячный процент капитализации и количество лет, в
течение которых будет открыт вклад.
Необходимо ежемесячно пересчитывать сумму, округляя её до
целого количества копеек в меньшую сторону. Например, если
после начисления процентов остаток включает 35,78 копейки,
то оставляем только 35 копеек, а дробную часть отбрасываем.
По окончании работы программы необходимо вывести, какую
сумму получит вкладчик на руки и какая сумма будет
зачислена в пользу банка за счёт округления копеек.

Советы и рекомендации
Для округления копеек можно умножить получившееся после
капитализации процентов число на 100, округлить в меньшую
сторону, затем поделить опять на 100. Отбрасываемую часть
можно получить вычитанием текущего значения остатка на
счёте и того, который был до округления.

Для 1000 рублей, 1% и одного года программа должна вывести
1126,78 и 0,04350000000022192 (возможно меньше знаков).

Для 1000 рублей, 1% и десяти лет программа должна вывести
3299,41 и 0,5216000000013992 (возможно меньше знаков).
*/

func main() {
	var (
		deposit, bankRevenue, revenue, monthPercent float64
		timeDeposit                                 int
	)

	fmt.Print("Введите сумму вклада: ")
	fmt.Scanln(&deposit)
	fmt.Print("Введите ежемесячный процент капитализации: ")
	fmt.Scanln(&monthPercent)
	fmt.Print("Введите срок вклада в месяцах: ")
	fmt.Scanln(&timeDeposit)

	for ; timeDeposit != 0; timeDeposit-- {
		revenue = deposit * (1 + monthPercent/100)
		deposit = math.Trunc(revenue*100) / 100
		bankRevenue += revenue - deposit
	}

	fmt.Printf("\nВкладчик получит: %v "+
		"\nБанк получит: %v \n", deposit, bankRevenue)

}
