package main

import "fmt"

/*
Напишите функцию, которая посчитает, сможет ли продавец в киоске
обслужить всех покупателей. В киоске каждый лимонад стоит пять
долларов. Клиенты стоят в очереди, чтобы купить у вас, и заказывают
по одному лимонаду. Каждый покупатель может купить только один
лимонад и заплатить купюрами номиналом 5, 10 или 20 долларов. Вы
должны дать каждому покупателю сдачу с его купюры.

Обратите внимание, что сначала у вас нет сдачи.

Советы и рекомендации
Сигнатура функции lemonadeChange(bills []int) bool,

где bills — это купюры, которые мы получаем от покупателей, по
одной купюре от каждого.

Верните true, если вы можете предоставить каждому покупателю
правильную сдачу.

# Пример 1

Расчёт сдачи.
Ввод: [5,5,5,10,20]
Вывод: true
Пояснение:
От первых трёх клиентов мы собираем три купюры по 5 долларов по
порядку. От четвёртого покупателя мы получаем купюру номиналом 10
долларов и возвращаем 5 долларов сдачи. От пятого клиента мы
получаем 20 долларов и возвращаем купюры номиналом 10 и 5 долларов.
Поскольку все клиенты получили правильную сдачу, мы выводим true.

# Пример 2

Расчёт сдачи.
Ввод: [10,10]
Вывод: false
Пояснение:
Поскольку купюр в кассе нет, мы не можем дать сдачу первому покупателю.

# Пример 3

Расчёт сдачи.
Ввод: [5,5,10,10,20]
Вывод: false
Пояснение:
От первых двух клиентов по порядку мы получаем две купюры по 5
долларов. Для следующих двух клиентов мы собираем купюры по 10 долларов
и возвращаем 5 долларов третьему и четвёртому клиентам. Последнему
покупателю мы не можем вернуть сдачу в размере 15 долларов, потому что
у нас есть только две купюры по 10 долларов. Поскольку не все
покупатели получили правильную сдачу, ответ — false.
*/
func main() {

	var incoming, count1, count2 int
	par1 := 5
	par2 := 10
	par3 := 20
	var result bool

	fmt.Println("\n\n\t   -=[ Расчёт сдачи ]=-   " +
		"\n(для завершения работы введите 1)\n")

begin:
	for {
		fmt.Print("\nВвод банкноты (5, 10 или 20 долларов): ")
		fmt.Scan(&incoming)
		if incoming == 1 {
			break
		}

		switch incoming {
		case par1:
			count1++
		case par2:
			count2++
			count1--
		case par3:
			if count2 > 0 {
				count2--
				count1--
			} else {
				count1 -= 3
			}
		default:
			fmt.Println("\tНет такой банкноты")
			continue begin
		}

		if count1 >= 0 && count2 >= 0 {
			result = true
			fmt.Print("\tПринято!\n")
		} else {
			result = false
			break
		}
	}

	if result {
		fmt.Println("\tСдачу сдать получилось")
	} else {
		fmt.Println("\tСдачу сдать не получилось")
	}

}
